<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mwyq.dao.NewsMapper">
	<resultMap id="BaseResultMap" type="com.mwyq.model.News">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="news_id" property="news_id" jdbcType="INTEGER" />
		<result column="news_token" property="news_token" jdbcType="VARCHAR" />
		<result column="words_num" property="words_num" jdbcType="INTEGER" />
		<result column="generated_keywords" property="generated_keywords"
			jdbcType="VARCHAR" />
		<result column="news_category" property="news_category"
			jdbcType="VARCHAR" />
		<result column="news_source" property="news_source" jdbcType="VARCHAR" />
		<result column="news_title" property="news_title" jdbcType="VARCHAR" />
		<result column="title_token" property="title_token" jdbcType="VARCHAR" />
		<result column="title_lading" property="title_lading" jdbcType="VARCHAR" />
		<result column="inborn_keywords" property="inborn_keywords"
			jdbcType="VARCHAR" />
		<result column="news_time" property="news_time" jdbcType="TIMESTAMP" />
		<result column="news_url" property="news_url" jdbcType="VARCHAR" />
		<result column="news_author" property="news_author" jdbcType="VARCHAR" />
		<result column="news_content" property="news_content" jdbcType="VARCHAR" />
		<result column="content_lading" property="content_lading"
			jdbcType="VARCHAR" />
		<result column="lang_type" property="lang_type" jdbcType="VARCHAR" />
		<result column="crawl_source" property="crawl_source" jdbcType="VARCHAR" />
		<result column="crawl_time" property="crawl_time" jdbcType="TIMESTAMP" />
		<result column="news_pictures" property="news_pictures"
			jdbcType="VARCHAR" />
		<result column="news_video" property="news_video" jdbcType="VARCHAR" />
		<result column="news_encode" property="news_encode" jdbcType="VARCHAR" />
		<result column="news_tendency" property="news_tendency"
			jdbcType="CHAR" />
		<result column="is_seged" property="is_seged" jdbcType="CHAR" />
		<result column="update_time" property="update_time" jdbcType="TIMESTAMP" />
		<result column="has_video" property="has_video" jdbcType="CHAR" />
		<result column="sensitive_words" property="sensitive_words"
			jdbcType="VARCHAR" />
		<result column="is_sensitive" property="is_sensitive" jdbcType="INTEGER" />
		<result column="websitename" property="websitename" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="typeResultMap" type="com.mwyq.model.typeQuery">
		<result property="webName" column="websitename" jdbcType="VARCHAR"
			javaType="string" />
		<result property="webCount" column="count(*)" jdbcType="INTEGER"
			javaType="int" />
	</resultMap>

	<resultMap id="SensitiveResultMap" type="com.mwyq.model.typeSensitive">
		<result property="dataTime" column="data_time" jdbcType="VARCHAR"
			javaType="string" />
		<result property="num" column="num" jdbcType="INTEGER"
			javaType="int" />
	</resultMap>

	<resultMap id="newsCategoryMap" type="com.mwyq.model.typeCategory">
		<result property="category" column="news_category" jdbcType="VARCHAR"
			javaType="string" />
		<result property="num" column="num" jdbcType="INTEGER"
			javaType="int" />
	</resultMap>

	<resultMap type="com.mwyq.model.sensitiveTendency" id="SensitiveStaticMap">
		<result property="data_time" column="data_time" jdbcType="VARCHAR"
			javaType="string" />
		<result property="total" column="total" jdbcType="INTEGER"
			javaType="int" />
		<result property="sensitive1" column="num1" jdbcType="INTEGER"
			javaType="int" />
		<result property="sensitive2" column="num2" jdbcType="INTEGER"
			javaType="int" />
	</resultMap>

	<resultMap type="com.mwyq.model.newsNumStatic" id="newsNumMap">
		<result property="data_time" column="data_time" jdbcType="VARCHAR"
			javaType="string" />
		<result property="cn" column="cn" jdbcType="INTEGER" javaType="int" />
		<result property="zang" column="zang" jdbcType="INTEGER"
			javaType="int" />
		<result property="wei" column="wei" jdbcType="INTEGER"
			javaType="int" />
		<result property="meng" column="meng" jdbcType="INTEGER"
			javaType="int" />
	</resultMap>

	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		news_id, news_token, words_num, generated_keywords, news_category,
		news_source, news_title,
		title_token, title_lading, inborn_keywords, news_time, news_url, news_author,
		news_content,
		content_lading, lang_type, crawl_source, crawl_time, news_pictures, news_video,
		news_encode,
		news_tendency, is_seged, update_time,
		has_video,sensitive_words,is_sensitive,websitename
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.mwyq.model.NewsExample">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from news
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<include refid="Base_Column_List" />
		from news
		where news_id = #{news_id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from news
		where news_id = #{news_id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.mwyq.model.NewsExample">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from news
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.mwyq.model.News">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into news (news_id, news_token, words_num,
		generated_keywords, news_category, news_source,
		news_title, title_token, title_lading,
		inborn_keywords, news_time, news_url,
		news_author, news_content, content_lading,
		lang_type, crawl_source, crawl_time,
		news_pictures, news_video, news_encode,
		news_tendency, is_seged, update_time,
		has_video,sensitive_words,is_sensitive,websitename)
		values (#{news_id,jdbcType=INTEGER}, #{news_token,jdbcType=VARCHAR},
		#{words_num,jdbcType=INTEGER},
		#{generated_keywords,jdbcType=VARCHAR}, #{news_category,jdbcType=VARCHAR}, #{news_source,jdbcType=VARCHAR},
		#{news_title,jdbcType=VARCHAR}, #{title_token,jdbcType=VARCHAR},
		#{title_lading,jdbcType=VARCHAR},
		#{inborn_keywords,jdbcType=VARCHAR}, #{news_time,jdbcType=TIMESTAMP}, #{news_url,jdbcType=VARCHAR},
		#{news_author,jdbcType=VARCHAR}, #{news_content,jdbcType=VARCHAR},
		#{content_lading,jdbcType=VARCHAR},
		#{lang_type,jdbcType=VARCHAR}, #{crawl_source,jdbcType=VARCHAR}, #{crawl_time,jdbcType=TIMESTAMP},
		#{news_pictures,jdbcType=VARCHAR}, #{news_video,jdbcType=VARCHAR},
		#{news_encode,jdbcType=VARCHAR},
		#{news_tendency,jdbcType=CHAR}, #{is_seged,jdbcType=CHAR}, #{update_time,jdbcType=TIMESTAMP},
		#{has_video,jdbcType=CHAR},#{sensitive_words,jdbcType=VARCHAR},#{is_sensitive,jdbcType=INTEGER},#{websitename,jdbcType=VARCHAR})

		<!-- 自己加的第一处 -->

	</insert>
	<insert id="insertSelective" parameterType="com.mwyq.model.News">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into news
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="news_id != null">
				news_id,
			</if>
			<if test="news_token != null">
				news_token,
			</if>
			<if test="words_num != null">
				words_num,
			</if>
			<if test="generated_keywords != null">
				generated_keywords,
			</if>
			<if test="news_category != null">
				news_category,
			</if>
			<if test="news_source != null">
				news_source,
			</if>
			<if test="news_title != null">
				news_title,
			</if>
			<if test="title_token != null">
				title_token,
			</if>
			<if test="title_lading != null">
				title_lading,
			</if>
			<if test="inborn_keywords != null">
				inborn_keywords,
			</if>
			<if test="news_time != null">
				news_time,
			</if>
			<if test="news_url != null">
				news_url,
			</if>
			<if test="news_author != null">
				news_author,
			</if>
			<if test="news_content != null">
				news_content,
			</if>
			<if test="content_lading != null">
				content_lading,
			</if>
			<if test="lang_type != null">
				lang_type,
			</if>
			<if test="crawl_source != null">
				crawl_source,
			</if>
			<if test="crawl_time != null">
				crawl_time,
			</if>
			<if test="news_pictures != null">
				news_pictures,
			</if>
			<if test="news_video != null">
				news_video,
			</if>
			<if test="news_encode != null">
				news_encode,
			</if>
			<if test="news_tendency != null">
				news_tendency,
			</if>
			<if test="is_seged != null">
				is_seged,
			</if>
			<if test="update_time != null">
				update_time,
			</if>
			<if test="has_video != null">
				has_video,
			</if>
			<if test="sensitive_words != null">
				sensitive_words,
			</if>
			<if test="is_sensitive !=null">
				is_sensitive,
			</if>
			<if test="websitename !=null">
				websitename,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="news_id != null">
				#{news_id,jdbcType=INTEGER},
			</if>
			<if test="news_token != null">
				#{news_token,jdbcType=VARCHAR},
			</if>
			<if test="words_num != null">
				#{words_num,jdbcType=INTEGER},
			</if>
			<if test="generated_keywords != null">
				#{generated_keywords,jdbcType=VARCHAR},
			</if>
			<if test="news_category != null">
				#{news_category,jdbcType=VARCHAR},
			</if>
			<if test="news_source != null">
				#{news_source,jdbcType=VARCHAR},
			</if>
			<if test="news_title != null">
				#{news_title,jdbcType=VARCHAR},
			</if>
			<if test="title_token != null">
				#{title_token,jdbcType=VARCHAR},
			</if>
			<if test="title_lading != null">
				#{title_lading,jdbcType=VARCHAR},
			</if>
			<if test="inborn_keywords != null">
				#{inborn_keywords,jdbcType=VARCHAR},
			</if>
			<if test="news_time != null">
				#{news_time,jdbcType=TIMESTAMP},
			</if>
			<if test="news_url != null">
				#{news_url,jdbcType=VARCHAR},
			</if>
			<if test="news_author != null">
				#{news_author,jdbcType=VARCHAR},
			</if>
			<if test="news_content != null">
				#{news_content,jdbcType=VARCHAR},
			</if>
			<if test="content_lading != null">
				#{content_lading,jdbcType=VARCHAR},
			</if>
			<if test="lang_type != null">
				#{lang_type,jdbcType=VARCHAR},
			</if>
			<if test="crawl_source != null">
				#{crawl_source,jdbcType=VARCHAR},
			</if>
			<if test="crawl_time != null">
				#{crawl_time,jdbcType=TIMESTAMP},
			</if>
			<if test="news_pictures != null">
				#{news_pictures,jdbcType=VARCHAR},
			</if>
			<if test="news_video != null">
				#{news_video,jdbcType=VARCHAR},
			</if>
			<if test="news_encode != null">
				#{news_encode,jdbcType=VARCHAR},
			</if>
			<if test="news_tendency != null">
				#{news_tendency,jdbcType=CHAR},
			</if>
			<if test="is_seged != null">
				#{is_seged,jdbcType=CHAR},
			</if>
			<if test="update_time != null">
				#{update_time,jdbcType=TIMESTAMP},
			</if>
			<if test="has_video != null">
				#{has_video,jdbcType=CHAR},
			</if>
			<if test="sensitive_words != null">
				#{sensitive_words,jdbcType=VARCHAR},
			</if>
			<if test="is_sensitive != null">
				#{is_sensitive,jdbcType=INTEGER},
			</if>
			<if test="websitename != null">
				#{websitename,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.mwyq.model.NewsExample"
		resultType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select count(*) from news
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update news
		<set>
			<if test="record.news_id != null">
				news_id = #{record.news_id,jdbcType=INTEGER},
			</if>
			<if test="record.news_token != null">
				news_token = #{record.news_token,jdbcType=VARCHAR},
			</if>
			<if test="record.words_num != null">
				words_num = #{record.words_num,jdbcType=INTEGER},
			</if>
			<if test="record.generated_keywords != null">
				generated_keywords = #{record.generated_keywords,jdbcType=VARCHAR},
			</if>
			<if test="record.news_category != null">
				news_category = #{record.news_category,jdbcType=VARCHAR},
			</if>
			<if test="record.news_source != null">
				news_source = #{record.news_source,jdbcType=VARCHAR},
			</if>
			<if test="record.news_title != null">
				news_title = #{record.news_title,jdbcType=VARCHAR},
			</if>
			<if test="record.title_token != null">
				title_token = #{record.title_token,jdbcType=VARCHAR},
			</if>
			<if test="record.title_lading != null">
				title_lading = #{record.title_lading,jdbcType=VARCHAR},
			</if>
			<if test="record.inborn_keywords != null">
				inborn_keywords = #{record.inborn_keywords,jdbcType=VARCHAR},
			</if>
			<if test="record.news_time != null">
				news_time = #{record.news_time,jdbcType=TIMESTAMP},
			</if>
			<if test="record.news_url != null">
				news_url = #{record.news_url,jdbcType=VARCHAR},
			</if>
			<if test="record.news_author != null">
				news_author = #{record.news_author,jdbcType=VARCHAR},
			</if>
			<if test="record.news_content != null">
				news_content = #{record.news_content,jdbcType=VARCHAR},
			</if>
			<if test="record.content_lading != null">
				content_lading = #{record.content_lading,jdbcType=VARCHAR},
			</if>
			<if test="record.lang_type != null">
				lang_type = #{record.lang_type,jdbcType=VARCHAR},
			</if>
			<if test="record.crawl_source != null">
				crawl_source = #{record.crawl_source,jdbcType=VARCHAR},
			</if>
			<if test="record.crawl_time != null">
				crawl_time = #{record.crawl_time,jdbcType=TIMESTAMP},
			</if>
			<if test="record.news_pictures != null">
				news_pictures = #{record.news_pictures,jdbcType=VARCHAR},
			</if>
			<if test="record.news_video != null">
				news_video = #{record.news_video,jdbcType=VARCHAR},
			</if>
			<if test="record.news_encode != null">
				news_encode = #{record.news_encode,jdbcType=VARCHAR},
			</if>
			<if test="record.news_tendency != null">
				news_tendency = #{record.news_tendency,jdbcType=CHAR},
			</if>
			<if test="record.is_seged != null">
				is_seged = #{record.is_seged,jdbcType=CHAR},
			</if>
			<if test="record.update_time != null">
				update_time = #{record.update_time,jdbcType=TIMESTAMP},
			</if>
			<if test="record.has_video != null">
				has_video = #{record.has_video,jdbcType=CHAR},
			</if>
			<if test="record.sensitive_words != null">
				sensitive_words = #{record.sensitive_words,jdbcType=VARCHAR},
			</if>
			<if test="record.is_sensitive != null">
				is_sensitive = #{record.is_sensitive,jdbcType=INTEGER},
			</if>
			<if test="record.websitename != null">
				websitename = #{record.websitename,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update news
		set news_id = #{record.news_id,jdbcType=INTEGER},
		news_token = #{record.news_token,jdbcType=VARCHAR},
		words_num = #{record.words_num,jdbcType=INTEGER},
		generated_keywords = #{record.generated_keywords,jdbcType=VARCHAR},
		news_category = #{record.news_category,jdbcType=VARCHAR},
		news_source = #{record.news_source,jdbcType=VARCHAR},
		news_title = #{record.news_title,jdbcType=VARCHAR},
		title_token = #{record.title_token,jdbcType=VARCHAR},
		title_lading = #{record.title_lading,jdbcType=VARCHAR},
		inborn_keywords = #{record.inborn_keywords,jdbcType=VARCHAR},
		news_time = #{record.news_time,jdbcType=TIMESTAMP},
		news_url = #{record.news_url,jdbcType=VARCHAR},
		news_author = #{record.news_author,jdbcType=VARCHAR},
		news_content = #{record.news_content,jdbcType=VARCHAR},
		content_lading = #{record.content_lading,jdbcType=VARCHAR},
		lang_type = #{record.lang_type,jdbcType=VARCHAR},
		crawl_source = #{record.crawl_source,jdbcType=VARCHAR},
		crawl_time = #{record.crawl_time,jdbcType=TIMESTAMP},
		news_pictures = #{record.news_pictures,jdbcType=VARCHAR},
		news_video = #{record.news_video,jdbcType=VARCHAR},
		news_encode = #{record.news_encode,jdbcType=VARCHAR},
		news_tendency = #{record.news_tendency,jdbcType=CHAR},
		is_seged = #{record.is_seged,jdbcType=CHAR},
		update_time = #{record.update_time,jdbcType=TIMESTAMP},
		has_video = #{record.has_video,jdbcType=CHAR},
		sensitive_words = #{record.sensitive_words,jdbcType=VARCHAR},
		is_sensitive = #{record.is_sensitive,jdbcType=INTEGER},
		websitename = #{record.websitename,jdbcType=VARCHAR}
		<!-- 自己加的第二处 -->
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.mwyq.model.News">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update news
		<set>
			<if test="news_token != null">
				news_token = #{news_token,jdbcType=VARCHAR},
			</if>
			<if test="words_num != null">
				words_num = #{words_num,jdbcType=INTEGER},
			</if>
			<if test="generated_keywords != null">
				generated_keywords = #{generated_keywords,jdbcType=VARCHAR},
			</if>
			<if test="news_category != null">
				news_category = #{news_category,jdbcType=VARCHAR},
			</if>
			<if test="news_source != null">
				news_source = #{news_source,jdbcType=VARCHAR},
			</if>
			<if test="news_title != null">
				news_title = #{news_title,jdbcType=VARCHAR},
			</if>
			<if test="title_token != null">
				title_token = #{title_token,jdbcType=VARCHAR},
			</if>
			<if test="title_lading != null">
				title_lading = #{title_lading,jdbcType=VARCHAR},
			</if>
			<if test="inborn_keywords != null">
				inborn_keywords = #{inborn_keywords,jdbcType=VARCHAR},
			</if>
			<if test="news_time != null">
				news_time = #{news_time,jdbcType=TIMESTAMP},
			</if>
			<if test="news_url != null">
				news_url = #{news_url,jdbcType=VARCHAR},
			</if>
			<if test="news_author != null">
				news_author = #{news_author,jdbcType=VARCHAR},
			</if>
			<if test="news_content != null">
				news_content = #{news_content,jdbcType=VARCHAR},
			</if>
			<if test="content_lading != null">
				content_lading = #{content_lading,jdbcType=VARCHAR},
			</if>
			<if test="lang_type != null">
				lang_type = #{lang_type,jdbcType=VARCHAR},
			</if>
			<if test="crawl_source != null">
				crawl_source = #{crawl_source,jdbcType=VARCHAR},
			</if>
			<if test="crawl_time != null">
				crawl_time = #{crawl_time,jdbcType=TIMESTAMP},
			</if>
			<if test="news_pictures != null">
				news_pictures = #{news_pictures,jdbcType=VARCHAR},
			</if>
			<if test="news_video != null">
				news_video = #{news_video,jdbcType=VARCHAR},
			</if>
			<if test="news_encode != null">
				news_encode = #{news_encode,jdbcType=VARCHAR},
			</if>
			<if test="news_tendency != null">
				news_tendency = #{news_tendency,jdbcType=CHAR},
			</if>
			<if test="is_seged != null">
				is_seged = #{is_seged,jdbcType=CHAR},
			</if>
			<if test="update_time != null">
				update_time = #{update_time,jdbcType=TIMESTAMP},
			</if>
			<if test="has_video != null">
				has_video = #{has_video,jdbcType=CHAR},
			</if>
			<if test="sensitive_words != null">
				sensitive_words = #{sensitive_words,jdbcType=VARCHAR},
			</if>
			<if test="is_sensitive != null">
				is_sensitive = #{is_sensitive,jdbcType=INTEGER},
			</if>
			<if test="websitename != null">
				websitename = #{websitename,jdbcType=VARCHAR},
			</if>
		</set>
		where news_id = #{news_id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.mwyq.model.News">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update news
		set news_token = #{news_token,jdbcType=VARCHAR},
		words_num = #{words_num,jdbcType=INTEGER},
		generated_keywords = #{generated_keywords,jdbcType=VARCHAR},
		news_category = #{news_category,jdbcType=VARCHAR},
		news_source = #{news_source,jdbcType=VARCHAR},
		news_title = #{news_title,jdbcType=VARCHAR},
		title_token = #{title_token,jdbcType=VARCHAR},
		title_lading = #{title_lading,jdbcType=VARCHAR},
		inborn_keywords = #{inborn_keywords,jdbcType=VARCHAR},
		news_time = #{news_time,jdbcType=TIMESTAMP},
		news_url = #{news_url,jdbcType=VARCHAR},
		news_author = #{news_author,jdbcType=VARCHAR},
		news_content = #{news_content,jdbcType=VARCHAR},
		content_lading = #{content_lading,jdbcType=VARCHAR},
		lang_type = #{lang_type,jdbcType=VARCHAR},
		crawl_source = #{crawl_source,jdbcType=VARCHAR},
		crawl_time = #{crawl_time,jdbcType=TIMESTAMP},
		news_pictures = #{news_pictures,jdbcType=VARCHAR},
		news_video = #{news_video,jdbcType=VARCHAR},
		news_encode = #{news_encode,jdbcType=VARCHAR},
		news_tendency = #{news_tendency,jdbcType=CHAR},
		is_seged = #{is_seged,jdbcType=CHAR},
		update_time = #{update_time,jdbcType=TIMESTAMP},
		has_video = #{has_video,jdbcType=CHAR}
		sensitive_words=#{sensitive_words,jdbcType=VARCHAR}
		is_sensitive=#{is_sensitive,jdbcType=INTEGER}
		websitename=#{websitename,jdbcType=VARCHAR}
		where news_id = #{news_id,jdbcType=INTEGER}
	</update>

	<!-- <select id="getTopTimeNew" resultMap="BaseResultMap"> -->
	<!-- select distinct date_format(news_time,'%y-%m-%d') from news where date_sub(curdate(),interval 
		9 day) <= date(news_time) -->
	<!-- </select> -->

	<!-- 设置实时新闻的数量和显示 -->
	<select id="getLastestNews" resultMap="BaseResultMap">
		select * from news where lang_type = #{lang} order by news_time desc
		limit 30
		<!-- select * from news where lang_type = "cn" order by news_time desc 
			limit 30 -->
	</select>



	<!-- 设置实时新闻的数量和显示 -->
	<select id="getSensitiveNews" resultMap="BaseResultMap">
		select * from news where lang_type=#{lang} and (is_sensitive=1 or
		is_sensitive=2) order by news_time desc limit 30
	</select>


	<!-- 显示最新一条新闻。 -->
	<select id="getLastestOneNews" resultMap="BaseResultMap">
		select * from news where lang_type = #{lang} order by news_time desc limit 1
	</select>

	<!-- 获取中文新闻数量 -->
	<select id="getChineseCount" resultType="int">
		select count(*) from news where lang_type ="cn" group by news_time order by
		news_time desc limit 1
	</select>

	<!-- 获取蒙文新闻数量 -->
	<select id="getMengCount" resultType="int">
		select count(*) from news where lang_type ="meng" group by news_time order
		by news_time desc limit 1
	</select>

	<!-- 获取藏文新闻数量 -->
	<select id="getZangCount" resultType="int">
		select count(*) from news where lang_type ="zang" group by news_time order
		by news_time desc limit 1
	</select>

	<!-- 获取维文新闻数量 -->
	<select id="getWeiCount" resultType="int">
		select count(*) from news where lang_type ="wei" group by news_time order by
		news_time desc limit 1
	</select>


	<!-- 显示最新时间新闻数量。 -->
	<select id="getLastestNewsCount" resultType="int">
		select count(*) from news group by news_time order by news_time desc limit 1
	</select>


	<!-- 根据ID获取新闻时间。 -->
	<select id="getTimeByID" resultType="Date">
		select news_time from news where news_id=#{clickId}
	</select>

	<!-- 根据时间和语言获取新闻数量 -->
	<select id="getCountByTime" resultType="int">
		select count(*) from news where news_time=#{time} and lang_type=#{lang}
	</select>

	<!-- 筛选出一个月中性新闻条数 -->
	<select id="getMonthSensitive1Count" resultType="int">
		select count(*) from news where lang_type=#{lang} and news_time &lt;=#{end}
		and news_time &gt;=#{begin} and is_sensitive=1
	</select>

	<!-- 筛选出一个月敏感新闻条数 -->
	<select id="getMonthSensitive2Count" resultType="int">
		select count(*) from news where lang_type=#{lang} and news_time&lt;=#{end}
		and news_time&gt;=#{begin} and is_sensitive=2
	</select>



	<!-- 获取最新一条敏感新闻 -->
	<select id="getLastestSensitiveNews" resultMap="BaseResultMap">
		select * from news where (is_sensitive=1 or is_sensitive=2) and
		lang_type=#{lang} order by news_time desc limit 1
	</select>

	<!-- 获取一条敏感新闻时间 -->
	<select id="getSensitiveLastestTime" resultType="Date">
		select news_time from news where lang_type=#{lang} and (is_sensitive=1 or
		is_sensitive=2) order by news_time desc limit 1
	</select>

	<!-- 获取新闻源数量 -->
	<select id="getSourseCount" resultType="int">
		SELECT count(*) from news where websitename=#{name}
	</select>

	<!-- 获取新闻源 -->
	<select id="getSourse" resultType="String">
		SELECT websitename from news GROUP BY websitename ORDER BY count(*) desc
		LIMIT 10
	</select>

	<!-- 获取标题显示数量 -->
	<select id="getNewsCountByData" resultType="int">
		SELECT count(*) FROM news WHERE news_time=#{date} and lang_type=#{lang}
	</select>

	<!-- 获取每种语言新闻最新日期 -->
	<select id="getNewsTimeByLang" resultType="Date">
		SELECT news_time FROM news WHERE lang_type=#{lang} ORDER BY news_time DESC
		LIMIT 1
	</select>

	<select id="getSourseAndCount" resultMap="typeResultMap">
		SELECT websitename,count(*) from news WHERE lang_type=#{lang} GROUP BY
		websitename ORDER BY count(*) desc limit 10
	</select>

	<!-- 最新获取敏感新闻方法 -->
	<select id="getSebsitiveTrend" resultMap="SensitiveResultMap">
		SELECT CONCAT(YEAR(news_time),'-',MONTH(news_time)) AS data_time ,COUNT(*)
		AS num FROM news GROUP BY YEAR(news_time) DESC,MONTH( news_time) DESC
		limit 7
	</select>

	<!-- 最新获取敏感新闻方法 -->
	<select id="getSensitiveTrency" resultMap="SensitiveStaticMap">
		SELECT CONCAT(YEAR(news_time),'-',MONTH(news_time)) AS data_time ,
		COUNT(1) as total,
		COUNT(if(is_sensitive=1,1,null)) AS num1,COUNT(if(is_sensitive=2,1,null)) AS num2 FROM news WHERE
		lang_type=#{lang}
		GROUP BY YEAR(news_time) DESC,MONTH( news_time) DESC limit 7
	</select>

	<!-- SELECT CONCAT(YEAR(news_time),"-",MONTH(news_time)) AS data_time , 
		COUNT(*) AS 'count' FROM news where lang_type ="cn" GROUP BY YEAR (news_time) 
		DESC, MONTH(news_time) DESC -->

	<select id="getAllNewsCount" resultMap="newsNumMap">
		SELECT CONCAT(YEAR(news_time),'-',MONTH(news_time)) AS data_time ,
		COUNT(if(lang_type="cn",1,null)) AS cn,
		COUNT(if(lang_type="zang",1,null)) AS zang,
		COUNT(if(lang_type="wei",1,null)) AS wei,
		COUNT(if(lang_type="meng",1,null)) AS meng
		FROM news
		GROUP BY YEAR(news_time) DESC,MONTH( news_time) DESC limit 7
	</select>

	<select id="getNewsCategory" resultMap="newsCategoryMap">
		SELECT news_category,count(*) as num from news WHERE lang_type=#{lang} and
		NOT ISNULL(news_category) GROUP BY news_category
	</select>

</mapper>